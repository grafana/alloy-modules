declare "structured_metadata" {
  argument "forward_to" {
    comment = "Must be a list(LogsReceiver) where collected logs should be forwarded to"
  }

  argument "metadata" {
    optional = true
  }

  export "receiver" {
    value = loki.process.structured_metadata.receiver
  }

  /*
  As all of the pod labels and annotations we transformed into labels in the previous relabelings to make
  them available to the pipeline processing we need to ensure they are not automatically created in Loki.
  This would result in an extremely high number of labels and values severely impacting query performance.
  Not every log has to contain these labels, but this list should reflect the set of labels that you want
  to explicitly allow.
  */
  loki.process "structured_metadata" {
    forward_to = argument.forward_to.value

    stage.structured_metadata {
      values = coalesce(argument.metadata.value, {
        filename = "filename",
        instance = "instance",
        log_type = "log_type",
        version = "version",
        helm_chart = "helm_sh_chart",
        pod = "pod",
      })
    }

  }
}

declare "keep_labels" {
  argument "forward_to" {
    comment = "Must be a list(LogsReceiver) where collected logs should be forwarded to"
  }

  argument "keep_labels" {
    optional = true
    comment = "List of labels to keep before the log message is written to Loki"
    default = [
      "app",
      "cluster",
      "component",
      "container",
      "env",
      "job",
      "level",
      "namespace",
      "region",
      "service",
      "squad",
      "team",
      "workload",
    ]
  }

  export "receiver" {
    value = loki.process.keep_labels.receiver
  }

  /*
  As all of the pod labels and annotations we transformed into labels in the previous relabelings to make
  them available to the pipeline processing we need to ensure they are not automatically created in Loki.
  This would result in an extremely high number of labels and values severely impacting query performance.
  Not every log has to contain these labels, but this list should reflect the set of labels that you want
  to explicitly allow.
  */
  loki.process "keep_labels" {
    forward_to = argument.forward_to.value

    stage.label_keep {
      values = argument.keep_labels.value
    }

  }
}
